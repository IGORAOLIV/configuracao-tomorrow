- Conceitos Gerencia de Software -
  1 - Software Configuration Management (SCM):
    É o processo de controlar e rastrear mudanças em software durante todo o seu ciclo de vida. Ele envolve práticas como versionamento de código, gestão de mudanças e auditorias para garantir que todas as modificações sejam documentadas e aprovadas. O objetivo é manter a integridade e a consistência do software, evitando conflitos e garantindo que todos os envolvidos trabalhem com as versões corretas.
  2 - Controle de Mudanças:
    É o processo de gerenciar, documentar e aprovar alterações em projetos, produtos ou sistemas. Ele garante que qualquer modificação seja analisada quanto ao impacto, aprovada por partes interessadas e implementada de forma controlada, evitando problemas como falhas ou inconsistências. O objetivo é manter a qualidade e a estabilidade, minimizando riscos durante o ciclo de vida do projeto.
  3 - Issue Tracking:
   É o processo de registrar, monitorar e gerenciar problemas, bugs ou solicitações de melhorias em um projeto, geralmente usando uma ferramenta dedicada. Cada issue é documentada com detalhes sobre sua natureza, prioridade e estado (como aberto, em progresso ou resolvido), permitindo que a equipe acompanhe o progresso e resolva problemas de forma eficiente. O objetivo é melhorar a qualidade do produto e facilitar a comunicação entre desenvolvedores e stakeholders. 
  4 - Milestones:
    São pontos-chave em um projeto que indicam o cumprimento de etapas importantes ou prazos significativos. Eles funcionam como marcos para medir o progresso, sinalizando a conclusão de fases específicas, como o término de um desenvolvimento, teste ou revisão. Embora não representem tarefas em si, são indicadores de metas atingidas e ajudam a manter o cronograma e o planejamento do projeto sob controle.
  5 - Controle de Versão:
    É a prática de gerenciar e registrar mudanças em arquivos de software ao longo do tempo. Ele permite que várias versões de um arquivo sejam salvas, comparadas, e revertidas, se necessário. Ferramentas de controle de versão, como Git, facilitam o trabalho colaborativo, permitindo que múltiplos desenvolvedores trabalhem simultaneamente no mesmo projeto, mantendo um histórico claro das modificações e evitando conflitos de código.
