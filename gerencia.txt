- Conceitos Gerencia de Software -
  1 - Software Configuration Management (SCM):
    É o processo de controlar e rastrear mudanças em software durante todo o seu ciclo de vida. Ele envolve práticas como versionamento de código, gestão de mudanças e auditorias para garantir que todas as modificações sejam documentadas e aprovadas. O objetivo é manter a integridade e a consistência do software, evitando conflitos e garantindo que todos os envolvidos trabalhem com as versões corretas.
  2 - Controle de Mudanças:
    É o processo de gerenciar, documentar e aprovar alterações em projetos, produtos ou sistemas. Ele garante que qualquer modificação seja analisada quanto ao impacto, aprovada por partes interessadas e implementada de forma controlada, evitando problemas como falhas ou inconsistências. O objetivo é manter a qualidade e a estabilidade, minimizando riscos durante o ciclo de vida do projeto.
  3 - Issue Tracking:
   É o processo de registrar, monitorar e gerenciar problemas, bugs ou solicitações de melhorias em um projeto, geralmente usando uma ferramenta dedicada. Cada issue é documentada com detalhes sobre sua natureza, prioridade e estado (como aberto, em progresso ou resolvido), permitindo que a equipe acompanhe o progresso e resolva problemas de forma eficiente. O objetivo é melhorar a qualidade do produto e facilitar a comunicação entre desenvolvedores e stakeholders. 
  4 - Milestones:
    São pontos-chave em um projeto que indicam o cumprimento de etapas importantes ou prazos significativos. Eles funcionam como marcos para medir o progresso, sinalizando a conclusão de fases específicas, como o término de um desenvolvimento, teste ou revisão. Embora não representem tarefas em si, são indicadores de metas atingidas e ajudam a manter o cronograma e o planejamento do projeto sob controle.
  5 - Controle de Versão:
    É a prática de gerenciar e registrar mudanças em arquivos de software ao longo do tempo. Ele permite que várias versões de um arquivo sejam salvas, comparadas, e revertidas, se necessário. Ferramentas de controle de versão, como Git, facilitam o trabalho colaborativo, permitindo que múltiplos desenvolvedores trabalhem simultaneamente no mesmo projeto, mantendo um histórico claro das modificações e evitando conflitos de código.
  6 - Diretório de Trabalho:
    É a pasta ou local no sistema de arquivos onde um usuário está atualmente operando. Em ferramentas de controle de versão, como Git, o diretório de trabalho é o espaço em que os arquivos do projeto estão localizados e onde o desenvolvedor faz modificações. É a área em que o código pode ser editado antes de ser preparado para commit, comparação ou atualização com o repositório.
  7 - Repositório:
    É um local onde o código-fonte de um projeto e seus arquivos associados são armazenados e gerenciados. Em sistemas de controle de versão, como Git, o repositório mantém o histórico completo das alterações feitas no projeto, incluindo commits, branches e versões anteriores, permitindo colaboração, rastreamento de mudanças e recuperação de versões anteriores. Ele pode ser local (no computador do desenvolvedor) ou remoto (hospedado em plataformas como GitHub ou GitLab).
  8 - Histórico de Versão:
    É o registro completo de todas as alterações feitas em um projeto ao longo do tempo. Em sistemas de controle de versão, cada modificação, como adição, exclusão ou atualização de arquivos, é documentada com um commit, que inclui informações como autor, data e descrição das mudanças. Esse histórico permite rastrear a evolução do projeto, reverter para versões anteriores e entender o contexto das modificações feitas, facilitando a colaboração e a manutenção do software.
  9 - Versionamento:
    É o processo de atribuir números ou rótulos a diferentes estados de um software à medida que ele evolui. Cada versão indica uma etapa de desenvolvimento ou uma alteração significativa no código, como novas funcionalidades, correções de bugs ou melhorias. O versionamento permite que equipes de desenvolvimento gerenciem múltiplas versões de um projeto de forma organizada, facilitando o rastreamento de alterações, o trabalho colaborativo e a distribuição de versões estáveis aos usuários.
  10 - Git:
    Git é um sistema de controle de versão distribuído que permite gerenciar e rastrear alterações em projetos de software. Ele facilita o trabalho colaborativo, permitindo que múltiplos desenvolvedores trabalhem no mesmo código ao mesmo tempo, sem conflitos. Git armazena um histórico completo de todas as modificações, possibilita a criação de branches (ramificações) para diferentes funcionalidades e oferece ferramentas para combinar, reverter ou comparar mudanças de forma eficiente. É amplamente utilizado em plataformas como GitHub e GitLab.